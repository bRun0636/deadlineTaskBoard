import logging
from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from ..keyboards.main_keyboards import get_settings_menu_keyboard
from ..keyboards.profile_keyboards import get_profile_edit_keyboard
from app.models.user import User, UserRole
from ..utils.message_utils import safe_edit_message

router = Router(name="settings_router")
logger = logging.getLogger(__name__)


@router.callback_query(F.data == "settings")
async def settings_menu_handler(callback: types.CallbackQuery, user: User):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    if not user or not user.is_registered:
        await callback.answer("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", show_alert=True)
        return
    
    settings_text = (
        "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
        "üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b> - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
        "üåç <b>–Ø–∑—ã–∫</b> - –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n"
        "üîí <b>–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å</b> - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏\n"
        "üí∞ <b>–ü–ª–∞—Ç–µ–∂–∏</b> - —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã\n"
        "üì± <b>Telegram</b> - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    )
    
    await callback.message.edit_text(
        settings_text,
        reply_markup=get_settings_menu_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "notification_settings")
async def notification_settings_handler(callback: types.CallbackQuery, user: User):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    if not user or not user.is_registered:
        await callback.answer("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", show_alert=True)
        return
    
    settings_text = (
        "üîî <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</b>\n\n"
        "üìß <b>Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>\n"
        "‚Ä¢ –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
        "‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
        "‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
        "‚Ä¢ –†–µ–∫–ª–∞–º–∞: ‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã\n\n"
        "üì± <b>Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>\n"
        "‚Ä¢ –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
        "‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
        "‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
        "‚Ä¢ –†–µ–∫–ª–∞–º–∞: ‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã\n\n"
        "üí° <b>–ß–∞—Å—Ç–æ—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:</b>\n"
        "‚Ä¢ –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ: ‚úÖ\n"
        "‚Ä¢ –†–∞–∑ –≤ —á–∞—Å: ‚ùå\n"
        "‚Ä¢ –†–∞–∑ –≤ –¥–µ–Ω—å: ‚ùå"
    )
    
    await callback.message.edit_text(
        settings_text,
        reply_markup=get_settings_menu_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "language_settings")
async def language_settings_handler(callback: types.CallbackQuery, user: User):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —è–∑—ã–∫–∞"""
    if not user or not user.is_registered:
        await callback.answer("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", show_alert=True)
        return
    
    settings_text = (
        "üåç <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —è–∑—ã–∫–∞</b>\n\n"
        "üá∑üá∫ <b>–¢–µ–∫—É—â–∏–π —è–∑—ã–∫:</b> –†—É—Å—Å–∫–∏–π\n\n"
        "üìù <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏:</b>\n"
        "‚Ä¢ üá∑üá∫ –†—É—Å—Å–∫–∏–π - ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω\n"
        "‚Ä¢ üá∫üá∏ English - ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n"
        "‚Ä¢ üá®üá≥ ‰∏≠Êñá - ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n"
        "‚Ä¢ üá™üá∏ Espa√±ol - ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n\n"
        "üí° <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b>\n"
        "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫.\n"
        "–î—Ä—É–≥–∏–µ —è–∑—ã–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è."
    )
    
    await callback.message.edit_text(
        settings_text,
        reply_markup=get_settings_menu_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "privacy_settings")
async def privacy_settings_handler(callback: types.CallbackQuery, user: User):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏"""
    if not user or not user.is_registered:
        await callback.answer("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", show_alert=True)
        return
    
    settings_text = (
        "üîí <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏</b>\n\n"
        "üë§ <b>–í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è:</b>\n"
        "‚Ä¢ –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è: ‚úÖ –ü—É–±–ª–∏—á–Ω–æ\n"
        "‚Ä¢ Email: ‚ùå –¢–æ–ª—å–∫–æ –¥–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤\n"
        "‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ‚ùå –ü—Ä–∏–≤–∞—Ç–Ω–æ\n"
        "‚Ä¢ –†–µ–π—Ç–∏–Ω–≥: ‚úÖ –ü—É–±–ª–∏—á–Ω–æ\n"
        "‚Ä¢ –ù–∞–≤—ã–∫–∏: ‚úÖ –ü—É–±–ª–∏—á–Ω–æ\n\n"
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        "‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏: ‚úÖ –ü—É–±–ª–∏—á–Ω–æ\n"
        "‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–æ–∫: ‚ùå –ü—Ä–∏–≤–∞—Ç–Ω–æ\n"
        "‚Ä¢ –û—Ç–∑—ã–≤—ã: ‚úÖ –ü—É–±–ª–∏—á–Ω–æ\n\n"
        "üí° <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>\n"
        "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
    )
    
    await callback.message.edit_text(
        settings_text,
        reply_markup=get_settings_menu_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "payment_settings")
async def payment_settings_handler(callback: types.CallbackQuery, user: User):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π"""
    if not user or not user.is_registered:
        await callback.answer("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", show_alert=True)
        return
    
    settings_text = (
        "üí∞ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π</b>\n\n"
        "üí≥ <b>–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</b>\n"
        "‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞: ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞\n"
        "‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏: ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ\n"
        "‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞: ‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ\n\n"
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        f"‚Ä¢ –û–±—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: {user.total_earnings or 0} ‚ÇΩ\n"
        "‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ —Å–¥–µ–ª–æ–∫: 0\n"
        "‚Ä¢ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: 0.0\n\n"
        "üí° <b>–î–æ–±–∞–≤–∏—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b>\n"
        "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
    )
    
    await callback.message.edit_text(
        settings_text,
        reply_markup=get_settings_menu_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "telegram_settings")
async def telegram_settings_handler(callback: types.CallbackQuery, user: User):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram"""
    if not user or not user.is_registered:
        await callback.answer("‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", show_alert=True)
        return
    
    settings_text = (
        "üì± <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram</b>\n\n"
        f"üÜî <b>Telegram ID:</b> {user.telegram_id}\n"
        f"üë§ <b>Username:</b> @{user.telegram_username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"üîó <b>–ü—Ä–∏–≤—è–∑–∫–∞:</b> ‚úÖ –ê–∫—Ç–∏–≤–Ω–∞\n\n"
        "üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>\n"
        "‚Ä¢ –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
        "‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
        "‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
        "‚Ä¢ –†–µ–∫–ª–∞–º–∞: ‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã\n\n"
        "üí° <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</b>\n"
        "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Telegram –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
    )
    
    await callback.message.edit_text(
        settings_text,
        reply_markup=get_settings_menu_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()

