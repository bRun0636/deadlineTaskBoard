from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_main_menu_keyboard(user_role=None, is_admin: bool = False, is_linked: bool = True) -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —É—á–µ—Ç–æ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    builder = InlineKeyboardBuilder()
    
    # –û–±—â–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    builder.button(text="üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏", callback_data="my_tasks")
    builder.button(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")
    builder.button(text="‚≠ê –†–µ–π—Ç–∏–Ω–≥", callback_data="rating")
    builder.button(text="üí¨ –°–æ–æ–±—â–µ–Ω–∏—è", callback_data="messages")
    builder.button(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏
    role_value = user_role.value if hasattr(user_role, 'value') else str(user_role) if user_role else "executor"
    
    # –ö–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    if role_value == "customer":
        # –î–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤ - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á –∏ –∑–∞–∫–∞–∑–æ–≤
        builder.button(text="üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", callback_data="create_task_new")
        builder.button(text="üìä –ó–∞–∫–∞–∑—ã", callback_data="orders")
        builder.button(text="‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="create_order")
        builder.button(text="ü§ë –ú–æ–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏", callback_data="my_executors")
    elif role_value == "executor":
        # –î–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π - –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤ –∏ –ø–æ–¥–ø–∏—Å–∫–∏
        builder.button(text="üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="available_orders")
        builder.button(text="üíº –ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", callback_data="my_proposals")
        builder.button(text="üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", callback_data="create_task_new")
    elif role_value == "admin":
        # –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ - –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏
        builder.button(text="üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", callback_data="create_task_new")
        builder.button(text="üìä –ó–∞–∫–∞–∑—ã", callback_data="orders")
        builder.button(text="‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="create_order")
        builder.button(text="ü§ë –ú–æ–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏", callback_data="my_executors")

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –Ω–µ–ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if not is_linked:
        builder.button(text="üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="link_account")

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if is_admin:
        builder.button(text="üîß –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin")

    builder.adjust(2)
    return builder.as_markup()

def get_tasks_menu_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∑–∞–¥–∞—á"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏", callback_data="my_tasks")
    builder.button(text="‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", callback_data="create_task")
    builder.button(text="üìä –í—Å–µ –∑–∞–¥–∞—á–∏", callback_data="all_tasks")
    builder.button(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–¥–∞—á", callback_data="task_statistics")
    builder.button(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    builder.adjust(1)
    return builder.as_markup()

def get_orders_menu_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∑–∞–∫–∞–∑–æ–≤"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders")
    builder.button(text="üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="available_orders")
    builder.button(text="‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="create_order")
    builder.button(text="üíº –ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", callback_data="my_proposals")
    builder.button(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤", callback_data="order_statistics")
    builder.button(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    builder.adjust(1)
    return builder.as_markup()

def get_messages_menu_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Å–æ–æ–±—â–µ–Ω–∏–π"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üí¨ –ú–æ–∏ —á–∞—Ç—ã", callback_data="my_chats")
    builder.button(text="üì® –ù–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", callback_data="new_messages")
    builder.button(text="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="send_message")
    builder.button(text="üìã –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π", callback_data="message_history")
    builder.button(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    builder.adjust(1)
    return builder.as_markup()

def get_rating_menu_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Ä–µ–π—Ç–∏–Ω–≥–∞"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚≠ê –ú–æ–π —Ä–µ–π—Ç–∏–Ω–≥", callback_data="my_rating")
    builder.button(text="üèÜ –¢–æ–ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π", callback_data="top_executors")
    builder.button(text="üìä –†–µ–π—Ç–∏–Ω–≥ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤", callback_data="top_customers")
    builder.button(text="üìà –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="my_statistics")
    builder.button(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    builder.adjust(1)
    return builder.as_markup()

def get_settings_menu_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notification_settings")
    builder.button(text="üåç –Ø–∑—ã–∫", callback_data="language_settings")
    builder.button(text="üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å", callback_data="privacy_settings")
    builder.button(text="üí∞ –ü–ª–∞—Ç–µ–∂–Ω—ã–µ –º–µ—Ç–æ–¥—ã", callback_data="payment_settings")
    builder.button(text="üì± Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="telegram_settings")
    builder.button(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    builder.adjust(1)
    return builder.as_markup()

def get_task_actions_keyboard(task_id: int = None) -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–¥–∞—á–µ–π"""
    builder = InlineKeyboardBuilder()
    if task_id:
        builder.button(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_task_{task_id}")
        builder.button(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_task_{task_id}")
        builder.button(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data=f"complete_task_{task_id}")
        builder.button(text="üë§ –ù–∞–∑–Ω–∞—á–∏—Ç—å", callback_data=f"assign_task_{task_id}")
        builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_tasks")
    else:
        builder.button(text="üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏", callback_data="my_tasks")
        builder.button(text="üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É", callback_data="create_task")
        builder.button(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    builder.adjust(2, 1)
    return builder.as_markup()

def get_order_actions_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–∫–∞–∑–æ–º"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_order_{order_id}")
    builder.button(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_order_{order_id}")
    builder.button(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data=f"complete_order_{order_id}")
    builder.button(text="üíº –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è", callback_data=f"order_proposals_{order_id}")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_orders")
    builder.adjust(2)
    return builder.as_markup()

def get_profile_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø—Ä–æ—Ñ–∏–ª—è"""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="edit_profile")
    builder.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics")
    builder.button(text="‚≠ê –ú–æ–∏ –æ—Ç–∑—ã–≤—ã", callback_data="my_reviews")
    builder.button(text="üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="link_account")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.adjust(1)
    return builder.as_markup()

def get_settings_keyboard() -> InlineKeyboardMarkup:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notification_settings")
    builder.button(text="üåç –Ø–∑—ã–∫", callback_data="language_settings")
    builder.button(text="üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å", callback_data="privacy_settings")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main")
    builder.adjust(1)
    return builder.as_markup()

def get_priority_keyboard() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üü¢ –ù–∏–∑–∫–∏–π (1)", callback_data="priority_1")
    builder.button(text="üü° –°—Ä–µ–¥–Ω–∏–π (2)", callback_data="priority_2")
    builder.button(text="üü† –í—ã—Å–æ–∫–∏–π (3)", callback_data="priority_3")
    builder.button(text="üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π (4)", callback_data="priority_4")
    builder.adjust(2)
    return builder.as_markup()

def get_confirmation_keyboard(action: str, item_id: int = None) -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è"""
    builder = InlineKeyboardBuilder()
    if item_id:
        builder.button(text="‚úÖ –î–∞", callback_data=f"confirm_{action}_{item_id}")
        builder.button(text="‚ùå –ù–µ—Ç", callback_data=f"cancel_{action}_{item_id}")
    else:
        builder.button(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_{action}")
        builder.button(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel_{action}")
    builder.adjust(2)
    return builder.as_markup()

def get_pagination_keyboard(page: int, total_pages: int, action: str) -> InlineKeyboardMarkup:
    """–ü–∞–≥–∏–Ω–∞—Ü–∏—è"""
    builder = InlineKeyboardBuilder()
    
    if page > 1:
        builder.button(text="‚¨ÖÔ∏è", callback_data=f"{action}_page_{page-1}")
    
    builder.button(text=f"{page}/{total_pages}", callback_data="current_page")
    
    if page < total_pages:
        builder.button(text="‚û°Ô∏è", callback_data=f"{action}_page_{page+1}")
    
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data=f"back_to_{action}")
    builder.adjust(3, 1)
    return builder.as_markup() 

def get_commands_menu_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ –≤ —Å—Ç–∏–ª–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    
    # –ö–æ–º–∞–Ω–¥—ã —Å —ç–º–æ–¥–∑–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º
    builder.button(
        text="üí™ /me - –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–µ —Ä–µ–∑—é–º–µ –∏–∑ hh.ru –∏–ª–∏ –¥—Ä.",
        callback_data="command_me"
    )
    builder.button(
        text="üôà /rating - –≤–∞—à —Ç–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥",
        callback_data="command_rating"
    )
    builder.button(
        text="üí™ /contracts - –º–æ–∏ –∑–∞–¥–∞—á–∏ –≤ —Ä–∞–±–æ—Ç–µ",
        callback_data="command_contracts"
    )
    builder.button(
        text="üí™ /sub - —Å–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∑–∞–¥–∞—á–∏",
        callback_data="command_sub"
    )
    builder.button(
        text="üí™ /push - –ø–µ—Ä–µ–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã",
        callback_data="command_push"
    )
    builder.button(
        text="ü§ë /myusers - —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π",
        callback_data="command_myusers"
    )
    builder.button(
        text="üìù /newtask - —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é –∑–∞–¥–∞—á—É",
        callback_data="command_newtask"
    )
    builder.button(
        text="üîß /newhardtask - —Å–æ–∑–¥–∞—Ç—å —Å–ª–æ–∂–Ω—É—é –∑–∞–¥–∞—á—É",
        callback_data="command_newhardtask"
    )
    builder.button(
        text="üì§ /send - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ",
        callback_data="command_send"
    )
    builder.button(
        text="‚öôÔ∏è /settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
        callback_data="command_settings"
    )
    builder.button(
        text="üìä /stat - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        callback_data="command_stat"
    )
    builder.button(
        text="üîë /token - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏",
        callback_data="command_token"
    )
    
    # –ö–Ω–æ–ø–∫–∞ "–ú–µ–Ω—é" –≤–Ω–∏–∑—É
    builder.button(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="main_menu"
    )
    
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ
    return builder.as_markup() 